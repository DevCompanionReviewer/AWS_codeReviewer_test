name: Notify API on PR Open

on:
  pull_request:
    types:
      - opened

jobs:
  notify_api:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          chmod +x ngrok
          sudo mv ngrok /usr/local/bin/ngrok
          rm ngrok-stable-linux-amd64.zip

      - name: Start ngrok
        run: |
          ngrok http 4043 &  # Use & to run ngrok in the background
          sleep 3  # Wait a few seconds for ngrok to start

      - name: Get Public URL
        id: ngrok
        run: |
          public_url=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Public URL: $public_url"
          echo "::set-output name=public_url::$public_url"

      - name: Get PR Information
        run: |
          pr_number="${{ github.event.pull_request.number }}"
          repo_name="${{ github.repository }}"
          pr_branch="${{ github.event.pull_request.head.ref }}"
          repo_owner=$(echo $repo_name | cut -d'/' -f1)
          repo_name=$(echo $repo_name | cut -d'/' -f2)
          changed_files="${{ steps.modified_files.outputs.modified_files }}"

          echo "PR Number: $pr_number"
          echo "Repository Owner: $repo_owner"
          echo "Repository Name: $repo_name"

      - name: Get Modified Files
        id: modified_files
        run: |
          files_response=$(curl -s -H "Authorization: Bearer ${{ secrets.MY_GITHUB_TOKEN }}" "https://api.github.com/repos/${repo_name}/pulls/${pr_number}/files")

          # Check if the response is a JSON array, if not, treat it as a single file
          if [[ $files_response =~ ^\[.*\]$ ]]; then
            files=$(echo "$files_response" | jq -r '.[].filename')
          else
            files="$files_response"
          fi

          # Check if there's only one file
          if [[ $(echo "$files" | wc -l) -eq 1 ]]; then
            changed_files="$files"
          else
            # Convert the list of files to a comma-separated string
            changed_files=$(echo "$files" | tr '\n' ',' | sed 's/,$//')
          fi

          echo "::set-output name=changed_files::${changed_files}"

      - name: Output Changed Files
        run: |
          # Print the comma-separated list of changed file names
          echo "Changed Files: $changed_files"

          # Call your API with the PR information and the ngrok public URL
          api_url="$public_url/startReview"
          github_token="${{ secrets.MY_GITHUB_TOKEN }}"
          curl -X POST -H "Content-Type: application/json" -d '{
              "prId": "'$pr_number'",
              "files": "'$changed_files'",
              "githubToken": "'$github_token'"
          }' $api_url

        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
