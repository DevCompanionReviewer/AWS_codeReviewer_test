name: Notify API on PR Open

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  notify_api:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "REPO_FULL_NAME=${{ github.repository }}" >> $GITHUB_ENV
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "REPO_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "BASE_BRANCH=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV

      - name: Get PR Information
        run: |
          echo "PR Number: $PR_NUMBER"
          echo "Repository Owner: $REPO_OWNER"
          echo "Repository Name: $REPO_NAME"
          echo "Base branch Name: $BASE_BRANCH"

      - name: Check parameters
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.event.action }}" == "synchronize" ]; then
          # Fetch the list of changed files from the commit associated with the synchronization
            changed_files=$(curl -s -H "Authorization: Bearer ${{ secrets.MY_GITHUB_TOKEN }}" "https://api.github.com/repos/${REPO_FULL_NAME}/pulls/${PR_NUMBER}/commits/${{ github.sha }}" | jq -r '.files[].filename' | tr '\n' ',' | sed 's/,$//')
          # Check if there's only one file
          else
            files_response=$(curl -s -H "Authorization: Bearer ${{ secrets.MY_GITHUB_TOKEN }}" "https://api.github.com/repos/${REPO_FULL_NAME}/pulls/${PR_NUMBER}/files")
  
            # Extract filenames from the JSON response using jq
            files=$(echo "$files_response" | jq -r '.[].filename')

            if [[ $(echo "$files" | wc -l) -eq 1 ]]; then
              changed_files="$files"
            else
              # Convert the list of files to a comma-separated string
              changed_files=$(echo "$files" | tr '\n' ',' | sed 's/,$//')
          fi
          
          
          echo "changed_files=$changed_files" >> $GITHUB_ENV
          echo "Files: $changed_files" 

      - name: Call the WrapperService
        run: |
          echo "Base branch Name: $BASE_BRANCH"
          echo "changed_files: $changed_files"
          if [ "$BASE_BRANCH" == "main" ] || [ "$BASE_BRANCH" == "master" ]; then
            api_url="https://devcompanion.cc-tooling.devtools.capillarytech.com/startReview"
            github_token="${{ secrets.MY_GITHUB_TOKEN }}"
            curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.MY_WRAPPERSERVICE_AUTH_TOKEN }}" -d "{
                \"prId\": \"${PR_NUMBER}\",
                \"files\": \"${changed_files}\",
                \"repoName\": \"${REPO_NAME}\",
                \"repoOwner\": \"${REPO_OWNER}\",
                \"githubToken\": \"${github_token}\"
            }" "$api_url"
          else
            echo "PR is not raised to the master branch. Skipping the review."
          fi